# Author : Afriani XD
# https://www.github.com/AfrianiXD
# apa liat liat file ini mau dec ya 
#gk bakal bisa dec file ini
# -------------------------------
_ = lambda __ : __import__('marshal').loads(__import__('base64').b64decode(__[::-1]));exec((_)(b'=='))